#!/usr/bin/env bash
if [ -z $(which tmux) ] || [ -z $(which vifm) ] || [ -z $(which nvim) ] || [ -z $(which nvr) ]; then
  echo "Please make sure tmux, vifm, neovim, and  neovim-remote is installed"
  exit
fi

vim () {
  if [ ! -z "$TMUX" ]; then
    tmux_current_session=$(tmux display-message -p '#S')
    tmux_current_window=$(tmux display-message -p '#I')
    tmux_current_pane=2
    tmux_nvim_socket=$(ls /tmp/ | grep ".*tmux-${tmux_current_session}-${tmux_current_window}-[1-9]-nvimsocket")

    if [[ $tmux_nvim_socket =~ ^tmux-${tmux_current_session}-(${tmux_current_window})-([1-9])-nvimsocket ]]; then
      tmux_target_pane=${BASH_REMATCH[2]}
    else
      tmux_target_pane=0
    fi

    nvim_remote_tmux_socket=/tmp/$tmux_nvim_socket

    if [ -S "/tmp/$tmux_nvim_socket" ] && [ $tmux_target_pane != 0 ]; then
      tmux select-pane -t $tmux_target_pane | nvr --servername $nvim_remote_tmux_socket "$@"
    else
      tmux_current_pane=2
      NVIM_LISTEN_ADDRESS=/tmp/tmux-$tmux_current_session-$tmux_current_window-$tmux_current_pane-nvimsocket nvim "$@"
    fi
  else
    NVIM_LISTEN_ADDRESS=/tmp/nvimsocket nvim "$@"
  fi
}

new () {
  tmux new-window 'vifm -c ":only" -c "set vicmd=dmux\ vim";bash -l' \; \
    set -g base-index 1 \; \
    setw -g pane-base-index 1 \; \
    split-window -h 'dmux vim;bash -l' \; \
    resize-pane -L 70 \; \
    select-pane -t 2 \; \
    split-window -v \; \
    resize-pane -D 10 \; \
    select-pane -t 1 \; \
    set -g status-keys vi \; \
    set -g history-limit 10000 \; \
    setw -g mode-keys vi \; \
    setw -g monitor-activity on \; \
    bind h select-pane -L \; \
    bind j select-pane -D \; \
    bind k select-pane -U \; \
    bind l select-pane -R \; \
    bind-key C-j resize-pane -D \; \
    bind-key C-k resize-pane -U \; \
    bind-key C-h resize-pane -L \; \
    bind-key C-l resize-pane -R \; \
    set -sg escape-time 0 \; \
    bind-key e run-shell 'dmux new' \; \
    bind-key -n C-z select-pane -t 2 \\\; resize-pane -Z \; \
    bind-key -n C-q kill-session \; \
    bind-key -n S-Down select-pane -t 3 \\\; break-pane -d -n _terminal_pane \; \
    bind-key -n S-Up select-pane -t 2 \\\; join-pane -s $.1 -l 10
}

init () {
  if [ -z "$1" ]; then
    tmux \
       new-session -d 'vifm -c ":only" -c "set vicmd=dmux\ vim";bash -l' \; \
       set -g base-index 1 \; \
       setw -g pane-base-index 1
    tmux -2 a \; \
      split-window -h 'dmux vim;bash -l' \; \
      resize-pane -L 70 \; \
      select-pane -t 2 \; \
      split-window -v \; \
      resize-pane -D 10 \; \
      select-pane -t 1 \; \
      set -g status-keys vi \; \
      set -g history-limit 10000 \; \
      setw -g mode-keys vi \; \
      setw -g monitor-activity on \; \
      bind h select-pane -L \; \
      bind j select-pane -D \; \
      bind k select-pane -U \; \
      bind l select-pane -R \; \
      bind-key C-j resize-pane -D \; \
      bind-key C-k resize-pane -U \; \
      bind-key C-h resize-pane -L \; \
      bind-key C-l resize-pane -R \; \
      set -sg escape-time 0 \; \
      bind-key e run-shell 'dmux new' \; \
      bind-key -n C-z select-pane -t 2 \\\; resize-pane -Z \; \
      bind-key -n C-q kill-session \; \
      bind-key -n S-Down select-pane -t 3 \\\; break-pane -d -n _terminal_pane \; \
      bind-key -n S-Up select-pane -t 2 \\\; join-pane -s $.1 -l 10
      else
    if [ ! -z "$(tmux ls | grep $1)" ]; then
      echo "- Found existing session: ${1}"
      echo "- Opening: ${1}"
      sleep 5
      tmux a -t ${1}
    else
      tmux \
       new-session -s ${1} -d 'vifm -c ":only" -c "set vicmd=dmux\ vim";bash -l' \; \
       set -g base-index 1 \; \
       setw -g pane-base-index 1
      tmux -2 a \; \
        split-window -h 'dmux vim;bash -l' \; \
        resize-pane -L 70 \; \
        select-pane -t 2 \; \
        split-window -v \; \
        resize-pane -D 10 \; \
        select-pane -t 1 \; \
        set -g status-keys vi \; \
        set -g history-limit 10000 \; \
        setw -g mode-keys vi \; \
        setw -g monitor-activity on \; \
        bind h select-pane -L \; \
        bind j select-pane -D \; \
        bind k select-pane -U \; \
        bind l select-pane -R \; \
        bind-key C-j resize-pane -D \; \
        bind-key C-k resize-pane -U \; \
        bind-key C-h resize-pane -L \; \
        bind-key C-l resize-pane -R \; \
        set -sg escape-time 0 \; \
        bind-key e run-shell 'dmux new' \; \
        bind-key -n C-z select-pane -t 2 \\\; resize-pane -Z \; \
        bind-key -n C-q kill-session \; \
        bind-key -n S-Down select-pane -t 3 \\\; break-pane -d -n _terminal_pane \; \
        bind-key -n S-Up select-pane -t 2 \\\; join-pane -s $.1 -l 10
    fi
  fi
}

# Check if the function exists (bash specific)
if declare -f "$1" > /dev/null
then
  # call arguments verbatim
  "$@"
else
  # Show a helpful error
  echo "'$1' is not a known function name" >&2
  exit 1
fi
